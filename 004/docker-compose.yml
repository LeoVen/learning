services:
  backend:
    build:
      context: .
      args:
        - BINARY_NAME=backend
    env_file:
      - path: .env
        required: true
    ports:
      - 4401:3000
    depends_on:
      - storage

  worker:
    deploy:
      mode: replicated
      replicas: 2
    build:
      context: .
      args:
        - BINARY_NAME=worker
    env_file:
      - path: .env
        required: true
    depends_on:
      database:
        condition: service_healthy
      storage:
        condition: service_healthy
      queue:
        condition: service_healthy

  database:
    build:
      context: ./docker/postgresql
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "toor"
      POSTGRES_DB: "root"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 5s

  queue:
    build:
      context: ./docker/rabbitmq
    ports:
      - 15672:15672 # management
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: queue_user
      RABBITMQ_DEFAULT_PASS: queue_pass
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 5s

  storage:
    build:
      context: ./docker/minio
    ports:
      - "9000:9000" # minio port
      - "9001:9001" # admin console
    environment:
      MINIO_ROOT_USER: storage_user
      MINIO_ROOT_PASSWORD: storage_pass
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3
        start_period: 5s
    volumes:
      - miniodata:/minio

  # https://min.io/docs/minio/linux/administration/monitoring/publish-events-to-amqp.html
  # https://min.io/docs/minio/linux/reference/minio-mc/mc-event-add.html#mc-event-supported-events
  makebucket:
    image: minio/mc:latest
    depends_on:
      storage:
        condition: service_healthy
    # Publish Events to AMQP
    # https://min.io/docs/minio/linux/administration/monitoring/publish-events-to-amqp.html
    entrypoint: >
      /bin/bash -c "
      mc config host add myminio http://storage:9000 storage_user storage_pass;
      echo 'creating buckets';
      mc mb myminio/file-upload;
      echo 'buckets created';
      echo 'setting up AMQP Endpoint';
      mc admin config set myminio notify_amqp:uploadevent enable="on" url="amqp://queue_user:queue_pass@queue:5672" exchange="amq.direct" exchange_type="direct" durable="on";
      echo 'Restarting server';
      mc admin service restart --json myminio;
      sleep 2;
      echo 'Configuring event target';
      mc event add myminio/file-upload arn:minio:sqs::uploadevent:amqp --event put;
      exit 0;
      "

volumes:
  miniodata:
